
Core gameplay elements:
    - Bit puzzles
    - Element puzzles like Portal has (but probably not as sophisticated)
    - Movement/platforming challenges involving different bodies, moving platforms, forcefields
        Body ideas:
            - Bouncing ball (autorejump + high elasticity)
            - Helicopter (autorejump + high inertia + low jump power + infinite multijump)
            - Wall climber (possibly ONLY wall-climbing, no jumping) (autorejump + low jump power + infinite walljumps)
            - Extreme multijumping?
            - Rocket jumps/swinging
    - Combat (with a puzzle-solving bent)
        - Bullet Hell style? Similar to Cave Story/Noita


Arena:
    Select level(s)

Loose ends:
- Gun changes color after saving
- Broadcast animation + HUD broadcast indicator blends in with background
- Joystick aim accuracy is VERY limited. Should probably allow spamming/strafing like Cave Story to compensate.
- Split screen gameplay for large levels? Should be handled internal to Canvas.
- Allow reordering of players or changing default player config

Features:
1 Puzzle elements:
    - Triggers w/ sensitivity levels: Need player + interacting, need player to enter trigger volume, need anything to enter trigger volume
    - Color changing/other effect layers
    - AND/OR/Timer relays
    - Disappearing/reappearing blocks
1 Story elements:
    1 persistent plot variables.
    2 Separate global- and outfit- scope? (e.g. beating boss = global scope, key = outfit scope)
    2 An inventory. Can probably be purely cosmetic.
    1 Doors that can be locked or unlocked depending on plot variables from either scope.
        1 More generally, want entity state to depend on plot variables. 
    1 Potential implementation: Global- and outfit- scope implemented as a set of ints, similar to the system for keeping track of which pickups have been collected already. They are stored in the save but           loaded into the collider and can be accessed the same way as broadcast codes.
    2 NPCS and bosses which can modify plot variables.
    1 Dialog
    2 Inventory
1 Sound effects
1 Music: see http://dig.ccmixter.org for free music, or contact noise, or try to make your own!
1 Controller support
2 Variable refresh rate
2 Generic Gun pickups
2 Map system: Use render test code on the collider texture
2 Wind/current object
2 leaf physicalParticles that fly eratically
2 Digital corruption visual effect; layer turns into random characters suddenly, gradually resolves back into
    original.
2 Lightning bolt, fire (spreads via embers), huge fireballs
2 Snakes (like in snake game) that move around and you can jump on them (platforming puzzle element)
2 transition visual effect
2 Wave and rocket guns
2 Explosions of sparks
2 Dust/debris falling from the ceiling (to go with shaking layer effect)
2 Plumes of steam
2 Rotary forcefields!
? Multi-thread processing for water and particles
? Editor misc:
    3 Display, allow changing palette selection (don't ignore number keys) in tab screen
    3 Add aB layer indicator which shows all of the layers and which one is selected
    3 Fix the default palette
    3 Need to be able to correspond entities in the file to entities in the editor more easily.

? Generic physicalEntity parameters (density/volume/mass)
? Combat elements:
    - Gun/turret enemies
    - Fast-moving enemies
? Flat mode (everything rendered to one texture) to save on processing power

Ideas:
    - Cyberpunk theme: Parallel digital and physical realms, distinct visual style, distinct puzzle types
    - Level where you find breath upgrades above water and ops below water - back and forth between those two
    - Level that is completely dark, must use bouncing particle explosion effect to navigate
    - WRT puzzles: Should give player feedback on plausible but wrong attempts, keep them entertained
    - You have a computer companion which is what allows you to broadcast codes. It has a test level which acts as
        the tutorial, also has randomly-generated puzzles with small bonuses.
    - Command line graphical effect when logging into a terminal.
    - Setting similar to New York 2140
        - Flooded coastal city decades from now after a climate apocalypse
        - Lowlands mostly abandoned, but buildings are hardened against the elements and continue to function
            - Robotic maintenance crews
            - Small-scale fission reactors
            - Internal networks functioning, external ones not so much
        - Circumstances of abandonment suspicious; possibly the gov't brought down the network and forced
            the city to be abandoned because an AGI was developed in one of the buildings, deemed too dangerous
            to interact with
    - Tutorial level: Older bro got you your neural interface hacking device, rewrote an abandoned building's
        network to teach you how to use it. Later he disappears, and you need to travel deeper into the abandoned
        city to find him...
    - Level where you're really bouncy, elasticity = 1.05 or something like that, but there are pools of water around and you need to use them to stop...

inspiration/vague visual ideas:
    - Giant drum machine like washing machine
    - Submechanophobia
    - Trippy AI face that speaks to you/watches you in the virtual world
        - AI doesn't want you poking around, if you go to far into his world he threatens you then starts killing you
            IRL and you have to get out of the level before he kills you entirely. Makes more sense if you don't usually
            have a health bar in the virtual world. Making virtual world one-hit-kill makes sense for small, puzzle-oriented levels.
    

Housekeeping items (may never get to all of these):
- Rewrite player::apply to be less confusing; maybe stop using bitsets, just use uint8_ts
- Docs, including "lessons learned"
- Replace x, y with Vector2 everywhere
- Create configure() functions rather than having 10-argument constructors/standardize constructor argument order
- Cap line lengths
- change everything from camelCase to PascalCase - use Perl to identify variable names using declarations? what about scoping?
- rename sizeFactor to Scale
- make layer use char[][] for mild performance benefits
- Convert rain to a generic random particle spawner that can spawn particles within a given box area
- Come up with better names for everything
- Several items which should be done together:
    - Rewrite save system as JSON
    - Rewrite player to not use so many fixed-size arrays
    - Create gun and op objects in player, instead of having a bunch of arrays
    - Guns and ops stored in player; pickups just unlock them.
        - Op data can be passed to player in readEntities() in game_main.cpp
- Split largest files (editables.cpp, player.cpp, editor_main.cpp) into smaller files, or at least improve structure

Bugs:
- When standing next to a solid block of height 1, explosion particles sometimes fly over it and sometimes don't.
- Some of the files in "dark" getting loaded as wrong width
- Water appears weird when player is moving very slowly in the vertical direction
- If there are two water objects with one above the other, they tend to interfere.
- Particles don't appear right next to walls
- Player vibrates when standing on a surface

Idea: Setting is a floating colony in the atmosphere of a gas giant. Modeled after a truly massive blimp?

Zone ideas:
    Greenhouses
    Residencies
    Commerical District
    Park
    Fabrication/Manufacturing 
    Superstructure (outside of town)
    Substructure/hull (bottom of station)
    Antenna Array
    Life Support/Environmental Conditioning
    Atmospheric Monitoring
    Power Distribution
    Network
    Computation
    Transit Hub
    Landing Port
    Buoyancy Control
    Reservoir

Constraints on story:
    - Want it to be adapted to the medium of the game I'm creating (can be told through text, dialog and environment only)
    - Ideally, text (DOS?) visuals tie into the story somehow
    - Makes sense with guns/outfit system
    - Write what you know!
    - Want it to be about an abandoned city/industrial wasteland like Rain World
AND EITHER:
    - Want it to be touching and homely like Studio Ghibli (instead of contrived stories of high adventure.), or at least believable and relateable.
    - Story pacing fits with puzzle/exploration gameplay
OR:
    - Want it to have fighting robots!


Another story idea: A small crew of professional (licensed) scavengers/salvagers, exploring an abandoned planetary colony.
- Planetary colony was abandoned due to large-scale disaster (solar flare? earthquake? Ecosystem/life support destabilization?) which
    left infrastructure, heavy machinery more or less intact but made the area unliveable.
    - Maybe a prion or some other type of sickness spread through the colony's farms, making it impossible to continue living there.
        Colonists forced to leave before the food supply destabilized entirely.
- Salvage technicians searching for mechanisms containing unobtanium. They spread out to search the colony separately, but remain in occasional radio contact.
- Player is invited to explore the lives that were left behind when the colonists evacuated.
- Due to near-lightspeed travel, each assignment for the scavengers is at most a few months, but the investors don't see returns
    for decades. The scavengers have no communication with the outside world. 
- There may be a few people living in this abandoned world, living off their own cultivars which were more expensive/less desirable
    but not affected by the prion. These cultivars were not widely available enough to support the original colonists, and so the 
    evacuation was still necessary.
- Emotional arc related to reading a diary which was published, or you found, written by one of the survivors. Possibly the diary
    helps the player character find catharsis with a loss of their own somehow. (I'm not sure I'm up to writing this...)
Themes: Loss, isolation, abandonment. The sad sense you get walking through an empty airport where everyone is gone.

Note on characters:
(A) (probably male) is technically capable and ambitious, a visionary and a leader. His great 
flaw is lying to himself and others about (B)'s capability; he spends the rest of his life 
trying to make (B) live up to promises, and dies with the regret of not having done so. 
Partners with (C), before he dies.
(B), to the extent that they can be thought of as a character, is subservient, spineless, easily
suggestible, competent in some ways but not others. Easily molded by (D)'s orders.
(C) (probably female) is extremely competent, but quiet and underconfident. She often places the
wishes of others before her own, almost to the point of allowing herself to be led, but she will
not betray her values. Her flaw is her lack of assertiveness; with more willingness to act
on her own, she could have prevented the whole incident. Partners with (A), before he dies.
(D) (probably male) is a natural leader and passionate idealist. His flaw is his need to feel
popular and his political machinations. Early on, he became infatuated with (C), and never really
forgave either (A) or (C) for choosing each other. Later, he partnered with (H)
(E) is the player.
(F) is the player's companion, motivated mostly be curiousity. (?)
(G) is the colony's foremost biologist and works on the farm. He is competent and honest as
well as being confident in his competency, which allows him to see the blight and act on that
information.
(H) (probably female) is insecure and strongly affected by her romantic relationship with (D). 
Although under other circumstances she might have been an exemplary partner, (D)'s lingering 
jealousy towards (C) gets in the way. Instead of leaving (D), she resents (C) and works to turn
(D) against her.
(I) (probably male) works to act as an ideal leader, trying to channel the will of the majority
of the colonists, but doesn't have a strong grasp of what is and isn't technically acheivable and
doesn't respect (C) enough to believe her when she tells him, instead believing she is too cautious
or too incompetent to acheive the colonists' desires.

Note on technology: (A)'s proposal was actually only somewhat impressive or original. The work of government
can be thought of in three levels: Making decisions, executing the decisions by changing the machinery
of bureaucracy, and maintaining those decisions/actually running the machinery. Many governments in
this world had already effectively automated the third, lowest level and used automation as an aid in
the second and first levels. (A) had a few clever ideas, but for the most part (A) was a newcomer in
a complex field and his popularity was more due to stating these ideas clearly and persuasively than
to any real innovation.

Also, Earth has a space elevator or something (space fountain?) and large space infrastructure already
established such that the costs of buying a surplus, soon-to-be retired ship, etc. are within the
realm of the acheivable for a large-scale, extremely successful crowdfunding campaign.

Amid strife in the Solar System, a public intellectual and programmer (A) promotes the idea of 
replacing bureaucracy with a computer system. The idea is initially to drastically reduce the 
cost of bureaucracy on the people, but (A)'s audience misinterprets the idea as replacing 
fallible human leadership with perfect computer leadership. Current events make the idea 
extremely appealing, and (A) gains a devoted following overnight. Among his supporters are 
(C), another talented computer scientist and general polymath, and (D), who gains prominence 
by proposing a plausible plan to actually found a seastead-style colony based on this idea. 
Millions of disaffected people worldwide apply to join, and (D) becomes an important figure in 
the growing community as (A) and (C) begin work on the system, (B).

Years later, a cult of personality has appeared around (A) and, to a lesser extent, (C) and 
(D). In addition, (A) and (C) are now romantic partners. Under guidance from (D), the 
community lays out a charter for the colony and specialized engineers design a habitable 
space. Finally, billions of dollars' worth of crowd funding and donations have made it 
possible to purchase a ship and equipment to start a new colony.

However, (B) shows drastic setbacks; although (B) is able to perform most bureaucratic 
functions efficiently and effectively, and makes the right choices as a leader most of the 
time, in simulations it occasionally makes drastically wrong decisions. (A) feels guilt and 
responsibility for the failure. (C) has only a secondary role and does not feel the same level 
of responsibility to the project; (C) urges that (A) correct the fans' misconceptions and call 
off or postpone the settlement. (D) (jealous of their relationship) blames them both for their 
failure to produce a working prototype and puts pressure on (A) to go ahead, emphasizing the 
thousands of people who have spent their life savings on the colony. (A) capitulates, 
rationalizing that (B) at least fulfills his original vision of taking over bureaucratic roles 
(which has actually already been realized by several governments.)

As a compromise, (A) also decides to spend the journey developing (B) while others are in cold 
sleep. When it's announced that (A) will not enter cold sleep immediately, instead spending 
several shifts on the maintenance crew, it causes a small amount of consternation among the 
fans; however, it's generally attributed to a sense of responsibility (A) feels towards the 
voyage. (C) also delays hibernation to put in some work with (A), but they are able to make 
little progress.

On arrival, (A) is noticeably aged and changed by the stress of working for (years?) to 
improve (B). However, (B) is only marginally improved, and it's clear to (A), (C), and (D) 
that (B) will not be able to take over the leadership of the colony. (A) dies unexpectedly, 
and (B) plans a huge state funeral for him. The population mourns his loss; they are concerned
about his mental state, but do not suspect the extent to which (A), (C), and (D) are running
things behind the scenes, covering for (B), who still has strictly limited capabilities.

(C) and (D) have a bitter fight over whether to reveal (B)'s shortcomings. (C) argues that the
experiment has conclusively failed, the people have a right to know, and the
colony should transition to a democracy, and points to several successful partially-automatic
democracies. (D) still blames (C) for failing in (B)'s design, and now plans to govern through
(B), essentially using (B) to legitimize their own leadership. (D) believes that this is
necessary, since division is the biggest threat to the success of the colony. (D) pressures (C)
into keeping quiet, but begins to grow paranoid, fearing that (C) will use the secret to undermine
their leadership. Gradually, (B), under (D)'s guidance, begins to adopt authoritarian measures.

Around this time, (D) begins a relationship with another colonist, (H). However, (D) is still
jealous of (C) due to their former relationship with (A), and (H) picks up on this, which makes them
resent (C). (D)'s paranoia feeds off of this resentment.

(G), a friend of (C)'s, discovers a crop disease of uncertain origin which threatens to undermine the
colony's food supply. (C) and (G) take their findings to (D), who forbids them from sharing the
results and promising to take care of it. (C) and (G) leave; (C) has doubts about (D)'s trustworthiness,
but is unable to make the mental leap to truly condemning (D), continuing to believe that community
cohesion comes first. Meanwhile, (H) convinces (D) that (C) and (G) are lying to try to undermine (D)'s
authority.

As time passes and the disease continues to spread with no sign of action on (D)'s part, (C) and (G)
again show up to argue with (D). (D) and (H) intentionally "imprison" or exile them; they trick them
into going to a secluded part of the farm sector, and then instruct (B) to prevent them from leaving
the area and to not deliver any messages from them to any of their friends. (D) and (H) intend this
to be a scare tactic; they intend to release the pair after a few days, on threat of further
mistreatment if they continue to spread "lies." However, in their own minds, they don't see it as
imprisonment; they rationalize it as a minimal intervention to prevent dangerous lies from spreading.

Meanwhile, the disease has been discovered  and is causing widespread anxiety. Most of the colonists
still think that (B) can handle the situation, and are asking for guidance from (D) as (B)'s
spokesperson. (D) still suspects that this is a lie and resolves to keep (C) and (G) in exile
as punishment. Some wonder why the crop disease wasn't discovered until it was already a crisis;
a few people try to contact (G) to ask about this, but they receive fake responses
generated by (B). As a result, nobody notices that (G) is missing for some time.

Finally (D) becomes convinced of the truth of the reports, but it's too late to do anything. 
Over several days and nights without sleep, (D) watches as nearly all of one of the colony's 
three staple crops is ruined. The population is confused and angry: How could this have 
happened? Some of the colonists begin to turn against (D) and (B). (D), encouraged by (H), 
maniacal and sleep-deprived and desparate to regain support, calls for another voyage to found 
a new colony, away from the infected soil of the old one. (D) hopes to recall the idealistic, 
hopeful early days of the colony. Experts confirm this is an awful idea, but some of the 
colonists are tentatively supportive. (D) orders (B) to begin making the colony ship ready.

However, by this time both (C) and (G) have been missed, and a large number of colonists have been
made aware of this by word of mouth. Search parties are organized using emergency radio systems which
(B) can't silence, although (B) is able to hinder the search by jamming and fabricating messages.
Eventually, though, (C) and (G) are discovered and their story becomes well-known. (C) tells the
story to the search party, who are outraged. Under encouragement from (G), and with help from the
search party, (C) disables (B). Then, a much larger mob places (D) and (H) under house arrest and
asks (C) for guidance.

(C)'s first priority is to stabilize the colony's infrastructure, and with help from (G),
is able to address two major challenges: distributing the colony's remaining food supplies,
and taking over management of life support and other essential functions from (B), who remains
loyal to (D) and so can't be reconnected. What follows is a long period where nobody has enough
to eat and, since the network is too closely integrated with (B) to work with (B) turned off,
communication is limited and most forms of digital entertainment are unavailable. In addition,
(C) is a weak, uninspiring leader; (C) does not want the role and can't find it in themself to
do a good job of it. Soon, a new, popular leader, (I) emerges, who speaks for
the colonists' desires. (C) often must take the role of the voice of reason, defending necessary
but unpleasant policies against (I), and this only makes (C) more unpopular.

At some point (C) pushes for (D) and (H) to be released. (C) does not want this colony to become
the sort of place where colonists are imprisoned; (C) wants to show that they are a more moral
leader and, anyway, (D) and (H)  are unpopular enough that they won't be able to regain any
significant influence. They are generally shunned. Soon, (H) is caught sabotaging the food supply
in order to increase discontentment, further undermining (C). Since (C) was the one who pushed for
their release, (I) blames (C), and (C) becomes even more unpopular. (I) takes over leadership of the
colony, and orders (D) and (H) placed back under house arrest.

However, (C) is still one of the most technically competent people in the colony and continues
working with (I) in the role of head technician. (I) taking leadership was a mistake, since by
doing so, they take responsibility for not being able to acheive the colonists' desires; they
continue to blame (C) for standing in their way and acting as the voice of reason. (C) remains
under considerable stress. Eventually, (I) and about half of the colonists decide that they want
to get on the ship and head for the nearest established colony able to support them.

(C) warns that the ship has degraded since arrival and may no longer be safe, but their 
concerns are overruled. (C) agrees to manage the technical side of the launch, reasoning that 
more lives are likely to be lost otherwise. Plans for departure begin, accompanied by a sense
of disappointment at the failure of the colony, but also hope for a more comfortable life
with less starvation and infighting.

Initially, about half the colonists wish to stay. They reason that there will be enough food 
for everyone once the others leave, and (B) can be reprogrammed to take over leadership of a 
smaller group. However, as plans to leave become more certain, more people choose to leave; 
more equipment and food are taken onto the ship, leaving less for those who would remain, and 
as the group shrinks, the idea of remaining seems more lonely and less appealing. Finally, the 
last tenth of the colony hoping to stay all change their mind within a few hours of each 
other.



(C) is able to avert famine by carefully managing the crops not affected by the disease. 
Although this plan is workable and nobody starves, it's very uncomfortable. In addition, (B) 
remains loyal to (D), and prevents access to critical areas of the colony infrastructure while 
calling for (D)'s release. (C) makes a speech laying out a plan to stabilize the colony's 
biosphere and reset (B) to a previous state. The plan requires hard work and deprivation, and 
instead the population calls for the colony's ship to be relaunched, taking them back to 
civilization. (C) agrees and manages to wrest control of the ship from (B), after which the 
colonists make their escape, returning to a nearby habitable planet. (D) elects to stay behind 
with (B), along with a small group who remain loyal to him; (C) allows this. The player (E) 
launches to the colony as assistant/grad student to a political scientist (F) who wants to 
study the colony as an experiment in computer government. They enter cold sleep before (A)'s 
death and arrive after the departure of the ship with the majority of the colonists. The 
remaining colonists, under (D), insist that they are the colony which (A) intended to create. 
They tell you that the colony was abandoned by traitors who stole the ship belonging to them. 
They also tell you that as trespassers in the colony, your ship is forfeit and they imprison 
you in the living space of the colony, preventing you from thoroughly exploring the colony, 
searching out testimonies from the departed colonists (which they have also almost entirely 
erased), or leaving on your ship. Obviously, you escape to do these three things, while 
secretly remaining in contact with your companion, who is able to help you work out the full 
story as you find artifacts left behind by the original colonists.

However, your primary goal is still to escape with the scientist. The scientist accidentally lets it slip that you were in 
contact, and as a result they are more thoroughly imprisoned. However, (D) does not know how to disable (F)'s advanced 
embedded communication tech, and so decides to forcefully put (F) in cold sleep instead. Since the colony does not have any 
cold sleep facilities itself, they put (F) into cold sleep on your ship! After you are able to figure out how to shut off 
power to the security systems, you are able to escape in your ship.

Also, lots of the remaining population want to escape too, but they don't have a ship and are prevented from talking about it by the
security bots. That's why (D) had you imprisoned; because he didn't want you flying off with his subjects.


Maybe the story doesn't need to be so complicated. Maybe it's something like:
Brother is training you.
Brother disappears on scavenging trip.
Mom helps you look for him.
You discover an AGI which bootstrapped itself from building security systems, then
    managed to build nuclear missiles from reactor fuel (buildings have small reactors) and used it to
    blackmail the government into declaring the city off limits.
The AGI would have killed you too, but your mother figures out what's going on almost immediately and creates
    deadman data caches which will publicize its existence if you are killed.
Maybe the AGI offers you money, or a robot with your brother's mind in exchange for you don't publicize its existence?

Tim's feedback from session 2:
Visual difference between spikes and solid
Visual diff between attractors and repulsors
Early fun.json, and funner.json are calibrated as intro levels
Rebindable keys

Next hurdle: Make a good movement system!

Lessons from Tim's playtest session:
Movement system and level design must mesh. Maybe more important than either alone.
Make it visually intuitive.
Forcefield is visually misleading: Tim thought tapping forcefield made it more powerful.
Force direction not visually clear.

What makes a good movement system?
1. Not frustrating
	Not too hard to master; not too much learning curve
	Things that look easy, are easy; no "gotchas"
	Predictable
2. *Enables* the player to do "extra" things: Not always? But can be
3. Not exploitable; not hard to design levels around
	Things that look hard / are designed to be, are hard
4. Intangibly satisfying, like Warning Forever or multidash in HLD.
The current movement system breaks ALL of these rules!

Case studies:

Cave Story: Base movement system satisfies 1, 2, 3.
Booster v1 is not frustrating, enabling, somewhat satisfying
Booster v2 has a steeper learning curve, but is much more satisfying, rewards the optional additional effort
Principle: More challenging movement systems are OK if they're optional for advanced players and reward the extra effort.

Rain world: Satisfies 3 only, but fits very well thematically. Can be satisfying at times, but not very good IMO.
Exception: Combat is a major strength. Throwing spears is thrilling in a way that makes cave story's button-mashing seem meaningless.

Hyper Light Drifter: Timing is everything, but this isn't taught to the player. Can be frustrating.
Enabling
Not exploitable
Satisfying

Celeste: Not frustrating: Gives you powerful, intuitive tools, but asks you to do hard things quickly with them.
Not frustrating
*very* enabling
Exploitable, to a limited extent
*very* satisfying

Within A Deep Forest: Novel movement system requires a lot of getting used to, but can pay off.
Takes time to master; can be frustrating; things that look easy are hard.
Enables the player: Not really? Strictly weaker than a normal movement system.
Not exploitable
Not really satisfying

Portal: Intertia-based puzzle movement system. Just gets around the problem by being puzzle-focused without much hard platforming at all.

I think I'm too afraid to surprise the player. Learning a new movement system isn't all bad; in fact,
buying a new game and discovering you already know how to play it would be kinda frustrating. Just as long
as it has an acceptable learning curve.

Goals:
- Platformable:
	- Release jump button early to limit jump height
	- Change direction in midair
	- Crisp movement
	- Walljumps, double jumps, etc.
But also:
	- Can be flung long distances by forcefields

Major options:
- Fully inertia-based in X and Y axes
- Fully inertia-based, but allow player to stop in midair by pressing down
- Fully inertia-based in Y axis, give player full control in X axis.
- Fully inertia-based until player takes control again by pressing a movement button, and then add X friction.
- Like Gris or Portal, make all platforming challenges optional, and only solving puzzles is necessary to progress. Challenge by choice.

Can also play with:
- Speed: Slowing things down makes a challenging movement system much more palatable.
- Max fall speed (might mess with fun stuff like trampolines)

Probably want to (in general) have single-direction forcefields, since they're more intuitive to
reason about. Probably want a system which is fully inertia-based in Y axis, gives player full control
in X axis (basically, behaves as closely to a traditional platformer as possible) in the absence of
a horizontal force. Not sure how horizontal forces should be handled, but they can be used minimally/
as an optional extra challenge.

At least early on, forcefields should be clearly delineated with arrow markers. Could even have
them light up when activated! Could do some neat stuff with black and yellow hazard stripes.

